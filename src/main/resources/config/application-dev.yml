# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://jbooter.github.io/profiles/
# More information on configuration properties: https://jbooter.github.io/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

spring:
    profiles:
        active: dev
        include: swagger, no-liquibase
    devtools:
        restart:
            enabled: true
        livereload:
            enabled: false # we use gulp + BrowserSync for livereload
    jackson:
        serialization.indent_output: true
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
#        url: jdbc:mysql://asksalacrawlerdev.cxjz4uk1on09.us-east-1.rds.amazonaws.com:3306/fiesta_policy?useUnicode=true&characterEncoding=utf8&useSSL=false
#        username: asksala_dev
#        password: asksala_dev
        url: jdbc:mysql://localhost:3306/endpoint_policy?useUnicode=true&characterEncoding=utf8&useSSL=false
        name:
        username: root
        password: F135t@pass
        hikari:
            data-source-properties:
                cachePrepStmts: true
                prepStmtCacheSize: 250
                prepStmtCacheSqlLimit: 2048
                useServerPrepStmts: true
    jpa:
        database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
        database: MYSQL
        show-sql: true
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.cache.use_second_level_cache: false
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: true
    mail:
        host: localhost
        port: 25
        username:
        password:
    messages:
        cache-seconds: 1
    thymeleaf:
        cache: false

liquibase:
    contexts: dev

# ===================================================================
# To enable SSL, generate a certificate using:
# keytool -genkey -alias FiestaSecurityUI -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
#
# You can also use Let's Encrypt:
# https://maximilian-boehm.com/hp2121/Create-a-Java-Keystore-JKS-from-Let-s-Encrypt-Certificates.htm
#
# Then, modify the server.ssl properties so your "server" configuration looks like:
#
# server:
#    port: 8443
#    ssl:
#        key-store: keystore.p12
#        key-store-password: <your-password>
#        keyStoreType: PKCS12
#        keyAlias: FiestaSecurityUI
# ===================================================================
server:
    port: 8081
    contextPath: /endpoint-policy
    compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
        min-response-size: 1024

# ===================================================================
# JBooter specific properties
#
# Full reference is available at: https://jbooter.github.io/common-application-properties/
# ===================================================================


fiesta:
    enpoints:
            iotRegisterResourceUrl: https://platform-dev.fiesta-iot.eu/iot-registry/api/resources
            iotRegisterTestbedUrl: https://platform-dev.fiesta-iot.eu/iot-registry/api/testbeds/
            iotRegisterTextUrl: https://platform-dev.fiesta-iot.eu/iot-registry/api/utils/annotator/testbed
            ontologyValidatrorObservationUrl: https://platform-dev.fiesta-iot.eu/ontologyValidator/Observations
            ontologyValidatorResourceUrl: https://platform-dev.fiesta-iot.eu/ontologyValidator/Resources
            authenticateUrl: https://platform-dev.fiesta-iot.eu/openam/json/authenticate
            getUserInfoUrl: https://platform-dev.fiesta-iot.eu/openam/json/users/
            getUserIdUrl: https://platform-dev.fiesta-iot.eu/openam/json/users?_action=idFromSession
            ontologyM3LiteUrl: http://ontology.fiesta-iot.eu/ontologyDocs/m3-lite.owl
            platformBaseURL: https://platform-dev.fiesta-iot.eu/
            executeQueryBaseURL: https://platform-dev.fiesta-iot.eu/

jbooter:
    http:
        version: V_1_1 # To use HTTP/2 you will need SSL support (see above the "server.ssl" configuration)
    # CORS is only enabled by default with the "dev" profile, so BrowserSync can access the API
    cors:
        allowed-origins: "*"
        allowed-methods: GET, PUT, POST, DELETE, OPTIONS
        allowed-headers: "*"
        exposed-headers:
        allow-credentials: true
        max-age: 1800
    security:
        authentication:
            jwt:
                secret: my-secret-token-to-change-in-production
                # Token is valid 24 hours
                token-validity-in-seconds: 86400
                token-validity-in-seconds-for-remember-me: 2592000
    mail: # specific JBooter mail property, for standard properties see MailProperties
        from: FiestaSecurityUI@localhost
        base-url: http://127.0.0.1:8080
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx.enabled: true
        graphite: # Use the "graphite" Maven profile to have the Graphite dependencies
            enabled: false
            host: localhost
            port: 2003
            prefix: FiestaSecurityUI
        prometheus: # Use the "prometheus" Maven profile to have the Prometheus dependencies
            enabled: false
            endpoint: /prometheusMetrics
        logs: # Reports Dropwizard metrics in the logs
            enabled: false
            report-frequency: 60 # in seconds
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: false
            host: localhost
            port: 5000
            queue-size: 512

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JBooterProperties above
#
# More documentation is available at:
# https://jbooter.github.io/common-application-properties/
# ===================================================================

application:
